var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
function getCookie(name) {
    var re = new RegExp(name + "=([^;]+)");
    var value = re.exec(document.cookie);
    return (value != null) ? unescape(value[1]) : null;
}
var __ui_loaded = false;
function uiCallback() {
    __ui_loaded = true;
}
var debug = function (message) {
    var params = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        params[_i - 1] = arguments[_i];
    }
    console.info.apply(console, ['gojump:', message].concat(params));
};
var KDY = (function () {
    function KDY() {
    }
    KDY.prototype.init = function () {
        var _this = this;
        return installWebpackHooker()
            .then(function (webpack) {
            _this.webpack = webpack;
            _this.dc = webpack.require('e55c');
            _this.conn = webpack.require('a5ed').a;
        });
    };
    KDY.prototype.forward = function (msg) {
        var vtable = {
            '$rid': this.ROOM.room_id,
            '$uid': this.uid,
            '$did': this.did,
            '$stk': this.stk
        };
        for (var _i = 0, _a = Object.keys(msg); _i < _a.length; _i++) {
            var key = _a[_i];
            var v = msg[key];
            if (typeof (v) == 'string' && v[0] == '$') {
                var repl = vtable[v];
                if (repl != undefined)
                    msg[key] = repl;
            }
        }
        this.conn.socketProxy.sendMessage(msg);
    };
    KDY.prototype.answer = function (qid, ans) {
        var msg = {
            type: "compqaq",
            uid: '$uid',
            rid: '$rid',
            acid: "act_comdt",
            qid: qid,
            aid: ans
        };
        console.info('activity.answer', qid, ans, new Date());
        this.forward(msg);
    };
    Object.defineProperty(KDY.prototype, "did", {
        get: function () {
            return getCookie('acf_did');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KDY.prototype, "uid", {
        get: function () {
            return getCookie('acf_uid');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KDY.prototype, "stk", {
        get: function () {
            return getCookie('acf_stk');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KDY.prototype, "ROOM", {
        get: function () {
            return this.dc.DataCenter.global.get("$ROOM");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KDY.prototype, "USER_INFO", {
        get: function () {
            return this.dc.DataCenter.global.get("USER_INFO");
        },
        enumerable: true,
        configurable: true
    });
    KDY.prototype.isSelf = function (msg) {
        return msg.uid === this.uid;
    };
    KDY.prototype.getBackpack = function (rid) {
        return new Promise(function (resolve, reject) {
            var formData = new FormData();
            formData.append('rid', rid);
            fetch('/member/prop/query', { method: 'POST', body: formData })
                .then(function (res) { return res.json(); })
                .then(function (res) {
                if (res.result != 0)
                    throw Error(res.msg);
                resolve(res.data);
            }).catch(reject);
        });
    };
    return KDY;
}());
function waitWebpack() {
    return new Promise(function (resolve) {
        (function check() {
            if (typeof webpackJsonp != 'undefined') {
                return resolve(webpackJsonp);
            }
            setTimeout(check, 10);
        })();
    });
}
function installWebpackHooker() {
    return __awaiter(this, void 0, void 0, function () {
        var hookModuleId, _raw_webpackJsonp;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    hookModuleId = '04b3';
                    return [4, waitWebpack()];
                case 1:
                    _raw_webpackJsonp = _a.sent();
                    debug('ready to install');
                    return [2, new Promise(function (resolve) {
                            webpackJsonp = function (a, b, c) {
                                if (b && b[hookModuleId]) {
                                    var raw_1 = b[hookModuleId];
                                    b[hookModuleId] = function (a, b, c) {
                                        resolve({ module: a, exports: b, require: c });
                                        return raw_1(a, b, c);
                                    };
                                }
                                return _raw_webpackJsonp(a, b, c);
                            };
                        })];
            }
        });
    });
}
var React, ReactDOM, room, EEV, rid;
function imgToUnicode(img) {
    var canvas = document.createElement('canvas');
    canvas.width = img.naturalWidth;
    canvas.height = img.naturalHeight;
    canvas.getContext('2d').drawImage(img, 0, 0);
    var data = canvas.toDataURL();
    canvas.remove();
    return data;
}
var global_ex = 0;
var ex_mode = 0;
(function () {
    return __awaiter(this, void 0, void 0, function () {
        function transit(target, msg) {
            if (msg.target == target) {
                if (msg.content) {
                    if (msg.args) {
                        eval(msg.content).apply(null, msg.args);
                    }
                    else {
                        eval(msg.content);
                    }
                }
                return true;
            }
            return false;
        }
        var msgQueue, coolingdown, kdy, g, CD, S, registerLogin, q, doAnswer, forwardMsg, user, container;
        var _this = this;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    debug('ijk-startup');
                    msgQueue = [];
                    coolingdown = false;
                    kdy = new KDY();
                    g = {};
                    CD = 5e3;
                    return [4, kdy.init()];
                case 1:
                    _a.sent();
                    room = kdy.ROOM;
                    React = kdy.webpack.require.n(kdy.webpack.require('8af1')).a;
                    ReactDOM = kdy.webpack.require.n(kdy.webpack.require('63f1')).a;
                    EEV = React.createElement;
                    rid = room.room_id.toString();
                    if (!kdy.uid || !kdy.stk) {
                        debug('invalid uid or not login');
                        return [2];
                    }
                    S = kdy.dc.SocketData;
                    registerLogin = false;
                    evc.listen('ex_apply', function (ex) {
                        global_ex = ex;
                    });
                    evc.listen('sendmsg', function (msg) {
                        if (msgQueue.length || coolingdown) {
                            msgQueue.push({ tick: Date.now(), content: msg });
                            return;
                        }
                        evc.post('sendmsg-control', msg);
                    });
                    q = {};
                    doAnswer = function (qid, aid) {
                        if (qid == null)
                            return;
                        if (aid != null) {
                            kdy.answer(q.qid, aid);
                            return;
                        }
                        evc.postAsync('ans', qid)
                            .then(function (res) {
                            if (res != null && Number(res) > -1) {
                                kdy.answer(qid, Number(res));
                            }
                        });
                    };
                    S.subscribe('compqs', function (msg) {
                        if (g.ex != 1)
                            return;
                        if (msg.qid == null && Number(msg.res) == 4 && msg.cd) {
                            var cd = Number(msg.cd) * 1000;
                            q.starts = Date.now();
                            q.end = Date.now() + cd;
                            if (!q.init) {
                                q.init = true;
                                evc.listen('live', function (status) {
                                    q.qid = status.qid;
                                });
                            }
                            setTimeout(function () { return __awaiter(_this, void 0, void 0, function () {
                                var aid, _a;
                                return __generator(this, function (_b) {
                                    switch (_b.label) {
                                        case 0:
                                            if (!q.qid) return [3, 2];
                                            _a = Number;
                                            return [4, evc.postAsync('ans', q.qid)];
                                        case 1:
                                            aid = _a.apply(void 0, [_b.sent()]);
                                            if (aid != null && aid > -1) {
                                                q.aid = aid;
                                            }
                                            _b.label = 2;
                                        case 2: return [2];
                                    }
                                });
                            }); }, Math.round(Math.random() * 5000) + cd / 3);
                            if (ex_mode) {
                                setTimeout(function () {
                                    doAnswer(q.qid, q.aid);
                                }, cd - Number(ex_mode) * 100);
                            }
                            return;
                        }
                        if ((ex_mode == null || Number(ex_mode) == 0) && msg.qid && Number(msg.res) == 0 && msg.aid == null) {
                            doAnswer(q.qid, q.aid);
                            q.aid = null;
                        }
                    });
                    S.subscribe('uenter', function (msg) {
                    });
                    S.subscribe('chatmsg', function (msg) {
                    });
                    S.subscribe('initcl', function (msg) {
                        CD = Number(msg.cd);
                        evc.post('setcd', { cd: CD });
                    });
                    S.subscribe('chatres', function (msg) {
                        CD = Number(msg.cd) * 1e3;
                        evc.post('setcd', { cd: CD });
                    });
                    forwardMsg = function (msg) {
                        var obj = msg;
                        if (Array.isArray(msg)) {
                            var codec = msg.map(function (n) { return n ^ 0x35; });
                            obj = JSON.parse(String.fromCharCode.apply(String, codec));
                        }
                        kdy.forward(obj);
                    };
                    evc.listen('setcd', function (msg) {
                        setTimeout(function () {
                            coolingdown = false;
                            if (msgQueue.length) {
                                evc.post('sendmsg', msgQueue.shift().content);
                            }
                            else {
                                document.dispatchEvent(new CustomEvent('chat-idle', { detail: null }));
                            }
                        }, msg.cd);
                    });
                    evc.listen('forward', forwardMsg);
                    evc.listen('transit', function (msg) {
                        transit('page', msg);
                    });
                    evc.listen('client-status', function (status) {
                        if (status.ex != null) {
                            g.ex = status.ex;
                            evc.post('ex_apply', status.ex);
                        }
                    });
                    evc.listen('sendmsg-control', function (msg) {
                        var txtControl = document.querySelector('.ChatSend .ChatSend-txt');
                        if (txtControl)
                            txtControl.value = msg.content || msg;
                        var sendButton = document.querySelector('.ChatSend-button');
                        if (sendButton) {
                            setTimeout(function () {
                                var event = new MouseEvent('click', { view: window, bubbles: true, cancelable: true });
                                sendButton.dispatchEvent(event);
                            }, 50);
                        }
                    });
                    user = __assign({}, kdy.USER_INFO);
                    evc.post('room_connect', { room: room, user: user, uid: kdy.uid, stk: kdy.stk });
                    return [4, new Promise(function (resolve) {
                            (function _check() {
                                if (__ui_loaded)
                                    return resolve();
                                setTimeout(_check, 10);
                            })();
                        })];
                case 2:
                    _a.sent();
                    container = document.createElement('div');
                    document.querySelector('.Title-roomOtherBottom').appendChild(container);
                    ReactDOM.render(React.createElement(ToolPanel), container);
                    return [2];
            }
        });
    });
})();